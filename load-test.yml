config:
  target: 'http://localhost:3000'
  phases:
    # 预热阶段
    - duration: 30
      arrivalRate: 5
      name: "Warm up"
    # 逐步增加负载
    - duration: 60
      arrivalRate: 10
      rampTo: 50
      name: "Ramp up load"
    # 高负载测试
    - duration: 120
      arrivalRate: 50
      name: "Sustained high load"
    # 峰值负载测试
    - duration: 60
      arrivalRate: 100
      name: "Peak load"
  processor: "./load-test-processor.js"

scenarios:
  # 测试商品列表API
  - name: "Get Products"
    weight: 40
    flow:
      - get:
          url: "/api/products"
          headers:
            Accept: "application/json"
          capture:
            - json: "$.data.products[0].id"
              as: "productId"
      - think: 1

  # 测试商品搜索
  - name: "Search Products"
    weight: 30
    flow:
      - get:
          url: "/api/products?search=小米"
          headers:
            Accept: "application/json"
      - think: 2

  # 测试分页
  - name: "Paginated Products"
    weight: 20
    flow:
      - get:
          url: "/api/products?page={{ $randomInt(1, 5) }}&limit=10"
          headers:
            Accept: "application/json"
      - think: 1

  # 测试缓存效果
  - name: "Cache Test"
    weight: 10
    flow:
      - get:
          url: "/api/products"
          headers:
            Accept: "application/json"
            If-Modified-Since: "{{ $timestamp() }}"
      - think: 0.5